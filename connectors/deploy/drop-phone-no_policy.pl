%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Prolog representation of a data flow policy
%   
%   Source: drop-phone-no
% 	
%	Do not edit this file, it has been generated automatically
% 	by XText/Xtend.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Only required for SWI-Prolog
% Allow the following predicates to be scattered around the prolog file.
% Otherwise Prolog will issue a warning if they are not stated in subsequent lines.		
%:- discontiguous service/1.
%:- discontiguous rule/1.
%:- discontiguous has_capability/2.
%:- discontiguous has_property/3.
%:- discontiguous has_target/2.
%:- discontiguous requires_prerequisites/2.
%:- discontiguous has_alternativedecision/2.
%:- discontiguous has_obligation/2.
%:- discontiguous receives_label/2.
regex(A,B,C) :- class("java.util.regex.Pattern") <- matches(A,B) returns C.		
%%%%%%%% Rules %%%%%%%%%%%%
rule(drop_phone_no).
has_target(drop_phone_no, service408197001).
service(service408197001).
has_endpoint(service408197001,".*://.*").
receives_label(drop_phone_no,r.receivesLabels).
has_decision(drop_phone_no, drop).

%%%%% Services %%%%%%%%%%%%
