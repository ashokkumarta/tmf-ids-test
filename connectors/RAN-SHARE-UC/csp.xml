<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd">

	<camel:sslContextParameters id="sslContext"
		certAlias="1.0.1">
		<camel:keyManagers keyPassword="password">
			<camel:keyStore resource="etc/csp.p12"
				password="password" />
		</camel:keyManagers>
		<camel:trustManagers>
			<camel:keyStore resource="etc/truststore.p12"
				password="password" />
		</camel:trustManagers>
	</camel:sslContextParameters>

	<bean id="ArtifactRequestCreationProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ArtifactRequestCreationProcessor" />
	<bean id="TMFArtifactResponseProcessor"
		class="tmf.ids.processors.TMFArtifactResponseProcessor" />
	<bean id="ContractRequestCreationProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ContractRequestCreationProcessor" />
	<bean id="ContractResponseProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ContractResponseProcessor" />
	<bean id="TypeExtractionProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.IdsMessageTypeExtractionProcessor" />

	<camelContext
		xmlns="http://camel.apache.org/schema/spring">

		<route id="usage-data-contract">
			<from uri="timer://usageDataContractRequest?repeatCount=1" />
			<log message="### USAGE DATA - Initiating Contract ###" />
			<setProperty name="artifactUri">
				<constant>https://catalyst.tmf/ran-share/usage-data</constant>
			</setProperty>
			<process ref="ContractRequestCreationProcessor" />
			<to
				uri="idscp2client://ran-regulator:29292?awaitResponse=true&amp;connectionShareId=udConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
			<process ref="TypeExtractionProcessor" />
			<choice>
				<when>
					<simple>${exchangeProperty.ids-type} == 'ContractResponseMessage'</simple>
					<log message="### USAGE DATA - Handling Contract Response ###" />
					<process ref="ContractResponseProcessor" />
					<to
						uri="idscp2client://ran-regulator:29292?connectionShareId=udConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
				</when>
				<otherwise>
					<log loggingLevel="ERROR"
						message="USAGE DATA - Expected ContractResponseMessage, but received:\n${body}\n### Header: ###\n${headers[idscp2-header]}" />
					<removeHeader headerName="idscp2-header" />
					<setBody>
						<simple>${null}</simple>
					</setBody>
				</otherwise>
			</choice>
		</route>


		<route id="usage-data">
			<from
				uri="timer://usageDataTimer?fixedRate=true&amp;period=30000&amp;delay=10000" />

			<log message="### USAGE DATA - Initiating Usage Data exchange ###" />
			<setProperty name="artifactUri">
				<constant>https://catalyst.tmf/ran-share/usage-data</constant>
			</setProperty>

			<process ref="ArtifactRequestCreationProcessor" />
			<log message="### USAGE DATA - Sending request to 'request for usage data' ###" />

			<to
				uri="idscp2client://ran-regulator:29292?awaitResponse=true&amp;connectionShareId=udConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
			<process ref="TypeExtractionProcessor" />
			<choice>
				<when>
					<simple>${exchangeProperty.ids-type} == 'ArtifactRequestMessage'</simple>
			<log message="### USAGE DATA - Received 'request for usage data' ###" />

					<log message="USAGE DATA - Collating usage data from csp performance dataapp..." />
					<to uri="http://csp-performance:9001?awaitResponse=true" />

					<log message="USAGE DATA - Pushing usage data as payload in IDS response..." />
					<setProperty name="tmf_content_pay_load">
						<simple>${bodyAs(String)}</simple>
					</setProperty>

					<setProperty name="artifactUri">
						<constant>https://catalyst.tmf/ran-share/usage-data</constant>
					</setProperty>

					<process ref="TMFArtifactResponseProcessor" />
					<log message="USAGE DATA - Sending usage data to ran-regulator:\n\n${body}" />
					<to
						uri="idscp2client://ran-regulator:29292?connectionShareId=udConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />

					<log message="USAGE DATA - Usage data sent to ran-regulator successfully" />
				</when>
				<otherwise>
					<log loggingLevel="ERROR"
						message="USAGE DATA - Expected ArtifactResponseMessage, but received:\n${body}\n### Header: ###\n${headers[idscp2-header]}" />
				</otherwise>
			</choice>
		</route>


		<route id="recommendations-contract">
			<from uri="timer://recommendationsContractRequest?repeatCount=1" />
					<log message="### RECOMMENDATOINS - Initiating contract ###" />

			<setProperty name="artifactUri">
				<constant>https://catalyst.tmf/ran-share/recommendations</constant>
			</setProperty>
			<process ref="ContractRequestCreationProcessor" />
			<to
				uri="idscp2client://ran-regulator:29291?awaitResponse=true&amp;connectionShareId=recomConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
			<process ref="TypeExtractionProcessor" />
			<choice>
				<when>
					<simple>${exchangeProperty.ids-type} == 'ContractResponseMessage'</simple>
					<log message="### RECOMMENDATOINS - Handling Contract Response ###" />
					<process ref="ContractResponseProcessor" />
					<to
						uri="idscp2client://ran-regulator:29291?connectionShareId=recomConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
				</when>
				<otherwise>
					<log loggingLevel="ERROR"
						message="RECOMMENDATOINS - Expected ContractResponseMessage, but received:\n${body}\n### Header: ###\n${headers[idscp2-header]}" />
					<removeHeader headerName="idscp2-header" />
					<setBody>
						<simple>${null}</simple>
					</setBody>
				</otherwise>
			</choice>
		</route>


		<route id="recommendations">
			<from
				uri="timer://recommendationsTimer?fixedRate=true&amp;period=60000&amp;delay=30000" />

					<log message="RECOMMENDATOINS - Requesting for recommendations..." />
			<setProperty name="artifactUri">
				<constant>https://catalyst.tmf/ran-share/recommendations</constant>
			</setProperty>

			<process ref="ArtifactRequestCreationProcessor" />
			<to
				uri="idscp2client://ran-regulator:29291?awaitResponse=true&amp;connectionShareId=recomConnection&amp;sslContextParameters=#sslContext&amp;useIdsMessages=true" />
			<process ref="TypeExtractionProcessor" />
			<choice>
				<when>
					<simple>${exchangeProperty.ids-type} == 'ArtifactResponseMessage'</simple>
					<log message="RECOMMENDATOINS - Received recommendation from ran-regulator\n\n${body}" />

					<!-- Process the recommendation -->
					<log message="RECOMMENDATOINS - Processing the recommendation received..." />

					<setHeader name="CamelHttpMethod">
						<constant>POST</constant>
					</setHeader>
					<setHeader name="content-type">
						<simple>text/plain</simple>
					</setHeader>
					<to
						uri="http://csp-recommendation-processor:9191?awaitResponse=true" />
					<log message="RECOMMENDATOINS - Proecssing complete." />

					<log message="RECOMMENDATOINS - Applied successfully" />
					<!-- Set body to null after data transfer -->
					<removeHeader headerName="idscp2-header" />
					<setBody>
						<simple>${null}</simple>
					</setBody>
				</when>
				<otherwise>
					<log loggingLevel="ERROR"
						message="RECOMMENDATOINS - Expected ArtifactResponseMessage, but received:\n${body}\n### Header: ###\n${headers[idscp2-header]}" />
				</otherwise>
			</choice>
		</route>
	</camelContext>
</beans>
