<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
          http://camel.apache.org/schema/spring
          http://camel.apache.org/schema/spring/camel-spring.xsd">

	<camel:sslContextParameters id="sslContext"
		certAlias="1.0.1">
		<camel:keyManagers keyPassword="password">
			<camel:keyStore resource="etc/ran-regulator.p12"
				password="password" />
		</camel:keyManagers>
		<camel:trustManagers>
			<camel:keyStore resource="etc/truststore.p12"
				password="password" />
		</camel:trustManagers>
	</camel:sslContextParameters>

	<bean id="ArtifactRequestProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ArtifactRequestProcessor" />
	<bean id="ContractRequestProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ContractRequestProcessor" />
	<bean id="ContractAgreementReceiverProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.ContractAgreementReceiverProcessor" />
	<bean id="TypeExtractionProcessor"
		class="de.fhg.aisec.ids.camel.idscp2.processors.IdsMessageTypeExtractionProcessor" />

	<camelContext
		xmlns="http://camel.apache.org/schema/spring">

		<route id="recommendations">
			<from
				uri="idscp2server://0.0.0.0:29292?sslContextParameters=#sslContext&amp;useIdsMessages=true" />
			<process ref="TypeExtractionProcessor"/>
			            <choice>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ContractRequestMessage'</simple>
                    <log message="### Handle ContractRequestMessage ###"/>
                    <setProperty name="containerUri">
                        <constant>https://hub.docker.com/layers/ashokkumarta/recommendations-processor-app/12.7.21/images/sha256-e39fcddf146f658d3fed8962d26152260356518e19a8665efa57afd2e50ab047#9191</constant>
                    </setProperty>
                    <process ref="ContractRequestProcessor"/>
                </when>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ContractAgreementMessage'</simple>
                    <log message="### Handle ContractAgreementMessage ###"/>
                    <!-- Only processing of incoming request must be performed, no reply -->
                    <process ref="ContractAgreementReceiverProcessor"/>
                    <removeHeader headerName="idscp2-header" />
                    <setBody><simple>${null}</simple></setBody>
                </when>
                <when>
                    <simple>${exchangeProperty.ids-type} == 'ArtifactRequestMessage'</simple>
                    <log message="### Handle ArtifactRequestMessage ###"/>
                    <process ref="ArtifactRequestProcessor" />
                </when>
                <otherwise>
                    <log loggingLevel="ERROR" message="### Server received unexpected message (otherwise branch):\n${body}\n### Header: ###\n${headers[idscp2-header]}"/>
                    <removeHeader headerName="idscp2-header" />
                    <setBody><simple>${null}</simple></setBody>
                </otherwise>
            </choice>
			
			<!-- 
			<log message="Consumer - Received from provider: ${body}" />
			<log message="Computing recommendations..." />
			<to uri="http://regulator-recommendations:9901?awaitResponse=true" />
			<log message="Consumer - Processing data..." />
			<log message="Sending recommendations data back" />
			-->
		</route>

		<route id="usage-data">
			<from
				uri="idscp2server://0.0.0.0:29291?sslContextParameters=#sslContext" />
			<log message="Regulator - Received usage data: ${body}" />

			<log message="Regulator - processing the usage data..." />
			<log message="Regulator - Proecssing complete." />
		</route>

	</camelContext>

</beans>
